<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>redis on Time Stream</title>
    <link>http://cxis.me/tags/redis/</link>
    <description>Recent content in redis on Time Stream</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>cxis</copyright>
    <lastBuildDate>Sat, 04 May 2019 17:30:28 +0000</lastBuildDate>
    
	<atom:link href="http://cxis.me/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Redis内存模型</title>
      <link>http://cxis.me/2019/05/04/Redis%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Sat, 04 May 2019 17:30:28 +0000</pubDate>
      
      <guid>http://cxis.me/2019/05/04/Redis%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/</guid>
      <description>&lt;p&gt;Redis内存主要可以分为：数据部分、Redis进程本身、缓冲区内存、内存碎片这四个部分。Redis默认通过jemalloc来分配内存。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis分布式锁及其他分布式锁实现方式</title>
      <link>http://cxis.me/2019/04/20/Redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%8F%8A%E5%85%B6%E4%BB%96%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Sat, 20 Apr 2019 21:10:02 +0000</pubDate>
      
      <guid>http://cxis.me/2019/04/20/Redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%8F%8A%E5%85%B6%E4%BB%96%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/</guid>
      <description>&lt;p&gt;Redis实现分布式锁大概有几种方案：使用set命令同时指定过期时间和NX、使用lua脚本和setnx加过期时间配合、基于Redlock算法的Redisson实现。分布式锁除了可以使用Redis实现外，还可以使用其他的实现，比如：mysql数据库方式、Tair实现、Zookeeper等等。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis跳表</title>
      <link>http://cxis.me/2019/04/19/Redis%E8%B7%B3%E8%A1%A8/</link>
      <pubDate>Fri, 19 Apr 2019 22:20:37 +0000</pubDate>
      
      <guid>http://cxis.me/2019/04/19/Redis%E8%B7%B3%E8%A1%A8/</guid>
      <description>&lt;p&gt;跳表skiplist是一种有序数据结构，在每个节点维持指向其他节点的指针，可以达到快速访问节点的目的。可以认为跳表在原有的有序链表上增加了多级索引，通过索引就可以快速查找。跳表的查找、插入、删除事件复杂度都是O(log n)，还可以实现区间查找。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis对象的9种类型</title>
      <link>http://cxis.me/2019/04/14/Redis%E5%AF%B9%E8%B1%A1%E7%9A%849%E7%A7%8D%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Sun, 14 Apr 2019 21:11:03 +0000</pubDate>
      
      <guid>http://cxis.me/2019/04/14/Redis%E5%AF%B9%E8%B1%A1%E7%9A%849%E7%A7%8D%E7%B1%BB%E5%9E%8B/</guid>
      <description>&lt;p&gt;Redis中基本数据结构有：简单动态字符串SDS、双端链表、跳表、字典、整数集合、压缩列表。但是Redis并没有直接使用这些数据结构来存放键值对，而是在这些基本数据结构之上构建了Redis的对象来表示。Redis对象系统包含：字符串对象String、列表对象List、哈希对象Hash、集合对象Set、有序集合对象ZSet、bitmaps、HyperLogLogs、Streams、GeoHash。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis内存淘汰机制</title>
      <link>http://cxis.me/2019/04/14/Redis%E5%86%85%E5%AD%98%E6%B7%98%E6%B1%B0%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Sun, 14 Apr 2019 17:02:40 +0000</pubDate>
      
      <guid>http://cxis.me/2019/04/14/Redis%E5%86%85%E5%AD%98%E6%B7%98%E6%B1%B0%E6%9C%BA%E5%88%B6/</guid>
      <description>&lt;p&gt;Redis可以设置key的过期时间，key过期了之后会根据key过期策略将key进行淘汰，但是如果Redis的内存到达了一定的阈值，即使key没有过期，也会根据一定的策略对数据进行淘汰。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis事务</title>
      <link>http://cxis.me/2019/04/14/Redis%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Sun, 14 Apr 2019 15:10:02 +0000</pubDate>
      
      <guid>http://cxis.me/2019/04/14/Redis%E4%BA%8B%E5%8A%A1/</guid>
      <description>&lt;p&gt;Redis事务会将多个命令请求打包，一次性的按照顺序执行多个命令，在事务执行期间，服务器不会中断事务去执行其他客户端的请求命令，会一直执行完。涉及到的命令：MULTI、EXEC、WATCH。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis发布与订阅</title>
      <link>http://cxis.me/2019/04/14/Redis%E5%8F%91%E5%B8%83%E4%B8%8E%E8%AE%A2%E9%98%85/</link>
      <pubDate>Sun, 14 Apr 2019 14:08:13 +0000</pubDate>
      
      <guid>http://cxis.me/2019/04/14/Redis%E5%8F%91%E5%B8%83%E4%B8%8E%E8%AE%A2%E9%98%85/</guid>
      <description>&lt;p&gt;Redis支持发布订阅功能，SUBSCRIBE命令可以让客户端订阅一个或者多个频道，PSUBSCRIBE可以让客户端订阅一个或多个模式的，PUBLISH用来发布消息。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis集群Cluster</title>
      <link>http://cxis.me/2019/04/13/Redis%E9%9B%86%E7%BE%A4Cluster/</link>
      <pubDate>Sat, 13 Apr 2019 22:20:27 +0000</pubDate>
      
      <guid>http://cxis.me/2019/04/13/Redis%E9%9B%86%E7%BE%A4Cluster/</guid>
      <description>&lt;p&gt;Redis提供的分布式解决方案：Redis Cluster集群，使用分片sharding来进行数据共享，还提供了复制和故障转移功能。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis哨兵Sentinel</title>
      <link>http://cxis.me/2019/04/10/Redis%E5%93%A8%E5%85%B5Sentinel/</link>
      <pubDate>Wed, 10 Apr 2019 20:37:25 +0000</pubDate>
      
      <guid>http://cxis.me/2019/04/10/Redis%E5%93%A8%E5%85%B5Sentinel/</guid>
      <description>&lt;p&gt;Sentinel哨兵，是Redis的高可用解决方案，由一个或多个Sentinel实例组成Sentinel系统，监控任意多个主服务器和从服务器，主服务器下线时自动将其下的从服务器升级成新的主服务器。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis主从复制</title>
      <link>http://cxis.me/2019/04/05/Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</link>
      <pubDate>Fri, 05 Apr 2019 21:03:55 +0000</pubDate>
      
      <guid>http://cxis.me/2019/04/05/Redis%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</guid>
      <description>&lt;p&gt;主从复制，用户可以执行SLAVEOF命令或者设置slaveof选项，让一个服务器（从服务器slave）去复制replicate另外一个服务器（主服务器master）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis线程模型及事件</title>
      <link>http://cxis.me/2019/04/03/Redis%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B%E5%8F%8A%E4%BA%8B%E4%BB%B6/</link>
      <pubDate>Wed, 03 Apr 2019 22:10:00 +0000</pubDate>
      
      <guid>http://cxis.me/2019/04/03/Redis%E7%BA%BF%E7%A8%8B%E6%A8%A1%E5%9E%8B%E5%8F%8A%E4%BA%8B%E4%BB%B6/</guid>
      <description>&lt;p&gt;Redis使用事件驱动模型，主要处理：文件事件，也就是和客户端的网络通信等等；以及时间事件，也就是一些定时任务之类的抽象。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis持久化</title>
      <link>http://cxis.me/2019/04/02/Redis%E6%8C%81%E4%B9%85%E5%8C%96/</link>
      <pubDate>Tue, 02 Apr 2019 20:01:00 +0000</pubDate>
      
      <guid>http://cxis.me/2019/04/02/Redis%E6%8C%81%E4%B9%85%E5%8C%96/</guid>
      <description>&lt;p&gt;Redis可以将内存中的数据库状态持久化到磁盘中去，提供了两种持久化方法：RDB持久化和AOF持久化。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis过期键的删除策略</title>
      <link>http://cxis.me/2019/03/26/Redis%E8%BF%87%E6%9C%9F%E9%94%AE%E7%9A%84%E5%88%A0%E9%99%A4%E7%AD%96%E7%95%A5/</link>
      <pubDate>Tue, 26 Mar 2019 00:27:31 +0000</pubDate>
      
      <guid>http://cxis.me/2019/03/26/Redis%E8%BF%87%E6%9C%9F%E9%94%AE%E7%9A%84%E5%88%A0%E9%99%A4%E7%AD%96%E7%95%A5/</guid>
      <description>&lt;p&gt;Redis过期时间保存在过期字典中，键的过期策略有三种：定时删除、惰性删除、定期删除。Redis采用了惰性删除和定期删除两种策略配合。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis数据库实现以及各种操作实现</title>
      <link>http://cxis.me/2019/03/25/Redis%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E7%8E%B0%E4%BB%A5%E5%8F%8A%E5%90%84%E7%A7%8D%E6%93%8D%E4%BD%9C%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Mon, 25 Mar 2019 22:10:07 +0000</pubDate>
      
      <guid>http://cxis.me/2019/03/25/Redis%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E7%8E%B0%E4%BB%A5%E5%8F%8A%E5%90%84%E7%A7%8D%E6%93%8D%E4%BD%9C%E5%AE%9E%E7%8E%B0/</guid>
      <description>&lt;p&gt;Redis数据库实现，保存键值对的方法，针对数据库添加、删除、更新、查询等方法的实现，设置生存时间和过期时间操作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis对象</title>
      <link>http://cxis.me/2019/03/20/Redis%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Wed, 20 Mar 2019 20:30:02 +0000</pubDate>
      
      <guid>http://cxis.me/2019/03/20/Redis%E5%AF%B9%E8%B1%A1/</guid>
      <description>&lt;p&gt;Redis对象系统包含：字符串对象String、列表对象List、哈希对象Hash、集合对象Set、有序集合对象ZSet。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis压缩列表</title>
      <link>http://cxis.me/2019/03/19/Redis%E5%8E%8B%E7%BC%A9%E5%88%97%E8%A1%A8/</link>
      <pubDate>Tue, 19 Mar 2019 23:20:04 +0000</pubDate>
      
      <guid>http://cxis.me/2019/03/19/Redis%E5%8E%8B%E7%BC%A9%E5%88%97%E8%A1%A8/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Redis整数集合</title>
      <link>http://cxis.me/2019/03/19/Redis%E6%95%B4%E6%95%B0%E9%9B%86%E5%90%88/</link>
      <pubDate>Tue, 19 Mar 2019 22:33:32 +0000</pubDate>
      
      <guid>http://cxis.me/2019/03/19/Redis%E6%95%B4%E6%95%B0%E9%9B%86%E5%90%88/</guid>
      <description>&lt;p&gt;当一个集合只包含整数值元素，并且集合的元素数不多时，Redis使用整数集合intset作为集合键的底层实现。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis字典</title>
      <link>http://cxis.me/2019/03/15/Redis%E5%AD%97%E5%85%B8/</link>
      <pubDate>Fri, 15 Mar 2019 22:05:40 +0000</pubDate>
      
      <guid>http://cxis.me/2019/03/15/Redis%E5%AD%97%E5%85%B8/</guid>
      <description>Redis字典使用哈希表作为底层实现，一个哈希表可以有多个哈希节点，每个哈希表节点就保存了字典中的一个键值对。 哈希表 Redis字典使用哈希表</description>
    </item>
    
    <item>
      <title>Redis简单动态字符串SDS</title>
      <link>http://cxis.me/2019/03/13/Redis%E7%AE%80%E5%8D%95%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2SDS/</link>
      <pubDate>Wed, 13 Mar 2019 20:05:32 +0000</pubDate>
      
      <guid>http://cxis.me/2019/03/13/Redis%E7%AE%80%E5%8D%95%E5%8A%A8%E6%80%81%E5%AD%97%E7%AC%A6%E4%B8%B2SDS/</guid>
      <description>Redis中的字符串使用的是Redis自定义的抽象类型，而不是直接使用C语言的字符串表示。Redis的字符串叫做：简单动态字符串Simple</description>
    </item>
    
  </channel>
</rss>