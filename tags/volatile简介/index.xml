<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>volatile简介 on Time Stream</title>
    <link>http://cxis.me/tags/volatile%E7%AE%80%E4%BB%8B/</link>
    <description>Recent content in volatile简介 on Time Stream</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>cxis</copyright>
    <lastBuildDate>Thu, 15 Dec 2016 16:55:57 +0000</lastBuildDate>
    
	<atom:link href="http://cxis.me/tags/volatile%E7%AE%80%E4%BB%8B/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>volatile简介</title>
      <link>http://cxis.me/2016/12/15/volatile%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Thu, 15 Dec 2016 16:55:57 +0000</pubDate>
      
      <guid>http://cxis.me/2016/12/15/volatile%E7%AE%80%E4%BB%8B/</guid>
      <description>&lt;p&gt;Java允许线程访问共享变量。作为规则，为了确保共享变量被一致的和可靠的更新，线程应该确保它获得一个排它锁单独的获取这个变量。Java提供了第二种机制即volatile关键字，在某些情况下比锁更加方便。一个字段可以被声明为volatile，在这种情况下，Java内存模型确保所有线程看到的变量值都一样。（&lt;a href=&#34;https://docs.oracle.com/javase/specs/jls/se7/html/jls-8.html#jls-8.3.1.4&#34;&gt;Java语言规范&lt;/a&gt;）&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>